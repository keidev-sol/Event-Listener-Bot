version: '3.8'

services:
  server:
    build:
      context: ./
      dockerfile: Dockerfile
    image: migration-analyser:latest
    container_name: migration-analyser
    environment:
      - NETWORK=${NETWORK}
      - DEX=${DEX}
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672
      - RPC_ENDPOINT=${RPC_ENDPOINT}
      - RPC_WEBSOCKET_ENDPOINT=${RPC_WEBSOCKET_ENDPOINT}
      - NEXT_PUBLIC_BASE_RPC_ENDPOINT=${NEXT_PUBLIC_BASE_RPC_ENDPOINT}
      - NEXT_PUBLIC_BASE_RPC_WSS_ENDPOINT=${NEXT_PUBLIC_BASE_RPC_WSS_ENDPOINT}
      - CHAT_ID=${CHAT_ID}
      - BOT_TOKEN=${BOT_TOKEN}
      - IS_LOCAL=${IS_LOCAL}
      - IN_CONTAINER=true
    ports:
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/app
    # network_mode: "host"
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # AMQP
      - "15672:15672"     # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data: